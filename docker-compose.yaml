version: "3"
services:
  db:
    build:
      context: ./
      dockerfile: ./docker/db.Dockerfile
    container_name: db-container
    image: db-image:latest
    restart: always
    ports:
      - "5433:5432"
    networks:
      - my_network
    volumes:
      - db_data:/var/lib/dbql/data

  rest-api-service:
    build:
      context: ./
      dockerfile: ./docker/rest-api-service.Dockerfile
    container_name: rest-api-service-container
    image: rest-api-service-image:latest
    ports:
      - "8080:8080"
    networks:
      - my_network
    depends_on:
      - db
    restart: always

  ai-service:
    build:
      context: ./
      dockerfile: ./docker/ai-service.Dockerfile
    container_name: ai-service-container
    image: ai-service-image:latest
    ports:
      - "5000:5000"
    networks:
      - my_network
    restart: always

  auth-service:
    build:
      context: ./
      dockerfile: ./docker/auth-service.Dockerfile
    container_name: auth-service-container
    image: auth-service-image:latest
    ports:
      - "8081:8081"
    networks:
      - my_network
    depends_on:
      - db
    restart: always

  collaboration-service:
    build:
      context: ./
      dockerfile: ./docker/collaboration-service.Dockerfile
    container_name: collaboration-service-container
    image: collaboration-service-image:latest
    ports:
      - "3000:3000"
    networks:
      - my_network
    restart: always

  frontend:
    build:
      context: ./
      dockerfile: ./docker/frontend.Dockerfile
    container_name: frontend-container
    image: frontend-image:latest
    ports:
      - "4200:4200"
    networks:
      - my_network
    restart: always

volumes:
  db_data:

networks:
  my_network:
